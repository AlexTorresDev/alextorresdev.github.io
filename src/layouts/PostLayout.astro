---
import type { MarkdownHeading } from 'astro'
import { Image } from 'astro:assets'
import { CollectionEntry, getCollection, getEntries } from 'astro:content'
import snarkdown from 'snarkdown'
import { SITE_TITLE } from 'config'
import { GITHUB_EDIT_URL } from 'consts'
import BaseLayout from '@/layouts/BaseLayout.astro'
import RightSidebar from '@/components/RightSidebar/RightSidebar.astro'
import Navigation from '@/components/Navigation.astro'
import TableOfContents from '@/components/RightSidebar/TableOfContents'
import Badge from '@/components/Badge.astro'

type Props = CollectionEntry<'blog'>['data'] & {
	id: string
	headings: MarkdownHeading[]
}

const dateFormat = Intl.DateTimeFormat('es-ES', {
	year: 'numeric',
	month: 'long',
	day: 'numeric'
})

const postEntries = await getCollection('blog')

const {
	id,
	headings,
	title,
	description,
	heroImage,
	pubDate,
	tags,
	updatedDate,
	relatedPosts
} = Astro.props

const displayDate = dateFormat.format(pubDate)
const displayUpdateDate = dateFormat.format(updatedDate)

const currentPage = Astro.url.pathname
const currentFile = `src/content${currentPage.replace(/\/?docs/, '')}.md`
const githubEditUrl = `${GITHUB_EDIT_URL}/${currentFile}`

const index = postEntries.findIndex(
	(p) => p.id === id && p.data.pubDate === pubDate
)
const pagination = {
	previous: postEntries[index + 1],
	next: postEntries[index - 1]
}

let relativePosts: CollectionEntry<'blog'>[] = []

if (relatedPosts) {
	relativePosts = await getEntries(relatedPosts)
}
---

<BaseLayout
	title={`${title} - ${SITE_TITLE.split('-')[0]}`}
	description={description}
	image={heroImage?.source}
>
	<div class="md:flex md:gap-16">
		<article
			class="mx-auto w-full max-w-2xl format format-sm sm:format-base lg:format-lg dark:format-invert"
		>
			<h1
				class="mb-4 text-3xl font-extrabold leading-tight text-neutral-800 lg:mb-6 lg:text-4xl dark:text-white"
				transition:name={`post-title-${currentPage.replace('/blog/', '')}`}
			>
				{title}
			</h1>
			<div class="flex justify-between flex-col gap-6 mt-8">
				<div
					class="flex flex-col items-start justify-between gap-4 md:flex-row md:items-end"
				>
					<div class="flex flex-col justify-between text-[15px]">
						{
							pubDate && (
								<div>
									Publicado: <time>{displayDate}</time>
								</div>
							)
						}
						{
							updatedDate && (
								<div>
									Ãšltima vez actualizado: <time>{displayUpdateDate}</time>{' '}
								</div>
							)
						}
					</div>

					{
						tags && (
							<div class="flex items-center gap-2">
								{tags.map((b) => (
									<span class="text-xs font-medium me-2 px-2.5 py-0.5 rounded border-[2px] border-neutral-200 text-neutral-800 dark:border-neutral-800 dark:text-neutral-300">{b}</span>
								))}
							</div>
						)
					}
				</div>

				<!-- <div class="dropdown lg:hidden mb-8 flex justify-end">
					<button type="button" tabindex="0" class="btn gap-2">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							class="h-5 w-5"
							fill="none"
							viewBox="0 0 24 24"
							stroke="currentColor"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M4 6h16M4 12h16M4 18h7"></path>
						</svg>
						<span>Tabla de contenidos</span>
					</button>

					<div
						tabindex="0"
						class="dropdown-content mt-3 shadow bg-base-100 rounded-md w-52 overflow-hidden not-prose"
					>
						<TableOfContents
							client:media="(max-width: 50em)"
							headings={headings}
							showTitle={false}
						/>
					</div>
				</div> -->
			</div>

			{
				heroImage && (
					<div class="mb-10">
						<figure>
							<Image
								width={750}
								height={468}
								format="webp"
								src={heroImage.source}
								alt={title}
								class="w-full rounded overflow-hidden h-auto"
								transition:name={`post-image-${currentPage.replace(
									'/blog/',
									''
								)}`}
							/>
							{heroImage.attribution && (
								<figcaption
									class="opacity-60"
									set:html={snarkdown(heroImage.attribution)}
								/>
							)}
						</figure>
					</div>
				)
			}

			<slot />

			<Navigation {...pagination} />

			<script
				src="https://giscus.app/client.js"
				data-repo="AlexTorresDev/alextorresdev.github.io"
				data-repo-id="MDEwOlJlcG9zaXRvcnkyOTg5MzExNzI="
				data-category="Blog Comments"
				data-category-id="DIC_kwDOEdFT5M4CYfdZ"
				data-mapping="pathname"
				data-strict="0"
				data-reactions-enabled="1"
				data-emit-metadata="0"
				data-input-position="bottom"
				data-theme="preferred_color_scheme"
				data-lang="es"
				data-loading="lazy"
				crossorigin="anonymous"
				async></script>
		</article>

		<RightSidebar headings={headings} githubEditUrl={githubEditUrl} />
	</div>
</BaseLayout>

<style is:inline>
	main {
		max-width: 100% !important;
		width: 1152px !important;
	}

	article {
		min-width: calc(100% - 320px);
		margin: 0 auto;
	}

	article .giscus {
		margin-top: 3rem;
	}
</style>
